syntax = "proto3";

package orbis.p2p.v1alpha1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "libp2p/crypto/v1/crypto.proto";

service P2PService {
  // Host returns the information about the host node.
  rpc Host(HostRequest) returns (HostResponse) {}

  // Peers lists information about connected peer nodes.
  rpc Peers(PeersRequest) returns (PeersResponse) {}

  // Connect connects to a peer node.
  rpc Connect(ConnectRequest) returns (ConnectResponse) {}

  // Send sends a message to a peer node.
  rpc Send(SendRequest) returns (SendResponse) {}

  // Publish broadcasts a message to a topic.
  rpc Publish(PublishRequest) returns (PublishResponse) {}

  // Subscribe broadcasts a message to a topic.
  rpc Subscribe(SubscribeRequest) returns (stream SubscribeResponse) {}
}

message HostRequest {}

message HostResponse {
  string id = 1;
}

message PeersRequest {}

message PeersResponse {
  repeated string ids = 1;
}

message SendRequest {
  string peer_info = 1;
  string protocol = 2;
  bytes data = 3;
}

message SendResponse {}

message ConnectRequest {
  string peer_info = 1;
}

message ConnectResponse {}

message PublishRequest {
  string topic = 1;
  bytes data = 2;
}

message PublishResponse {}

message SubscribeRequest {
  string topic = 1;
}

message SubscribeResponse {
  bytes data = 1;
}
