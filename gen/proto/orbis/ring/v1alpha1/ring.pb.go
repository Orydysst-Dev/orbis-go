// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: orbis/ring/v1alpha1/ring.proto

package ringv1alpha1

import (
	pb "github.com/libp2p/go-libp2p/core/crypto/pb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListRingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRingsRequest) Reset() {
	*x = ListRingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRingsRequest) ProtoMessage() {}

func (x *ListRingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRingsRequest.ProtoReflect.Descriptor instead.
func (*ListRingsRequest) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{0}
}

type ListRingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rings []*Ring `protobuf:"bytes,1,rep,name=rings,proto3" json:"rings,omitempty"`
}

func (x *ListRingsResponse) Reset() {
	*x = ListRingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRingsResponse) ProtoMessage() {}

func (x *ListRingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRingsResponse.ProtoReflect.Descriptor instead.
func (*ListRingsResponse) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{1}
}

func (x *ListRingsResponse) GetRings() []*Ring {
	if x != nil {
		return x.Rings
	}
	return nil
}

type CreateRingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ring *Ring `protobuf:"bytes,1,opt,name=ring,proto3" json:"ring,omitempty"`
}

func (x *CreateRingRequest) Reset() {
	*x = CreateRingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRingRequest) ProtoMessage() {}

func (x *CreateRingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRingRequest.ProtoReflect.Descriptor instead.
func (*CreateRingRequest) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRingRequest) GetRing() *Ring {
	if x != nil {
		return x.Ring
	}
	return nil
}

type CreateRingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateRingResponse) Reset() {
	*x = CreateRingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRingResponse) ProtoMessage() {}

func (x *CreateRingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRingResponse.ProtoReflect.Descriptor instead.
func (*CreateRingResponse) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRingResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetRingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRingRequest) Reset() {
	*x = GetRingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRingRequest) ProtoMessage() {}

func (x *GetRingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRingRequest.ProtoReflect.Descriptor instead.
func (*GetRingRequest) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{4}
}

func (x *GetRingRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetRingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ring *Ring `protobuf:"bytes,1,opt,name=ring,proto3" json:"ring,omitempty"`
}

func (x *GetRingResponse) Reset() {
	*x = GetRingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRingResponse) ProtoMessage() {}

func (x *GetRingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRingResponse.ProtoReflect.Descriptor instead.
func (*GetRingResponse) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{5}
}

func (x *GetRingResponse) GetRing() *Ring {
	if x != nil {
		return x.Ring
	}
	return nil
}

type DeleteRingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRingRequest) Reset() {
	*x = DeleteRingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRingRequest) ProtoMessage() {}

func (x *DeleteRingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRingRequest.ProtoReflect.Descriptor instead.
func (*DeleteRingRequest) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteRingRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RefreshRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RefreshRequest) Reset() {
	*x = RefreshRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshRequest) ProtoMessage() {}

func (x *RefreshRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshRequest.ProtoReflect.Descriptor instead.
func (*RefreshRequest) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{7}
}

func (x *RefreshRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PublicKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PublicKeyRequest) Reset() {
	*x = PublicKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKeyRequest) ProtoMessage() {}

func (x *PublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKeyRequest.ProtoReflect.Descriptor instead.
func (*PublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{8}
}

func (x *PublicKeyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PublicKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey *pb.PublicKey `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *PublicKeyResponse) Reset() {
	*x = PublicKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKeyResponse) ProtoMessage() {}

func (x *PublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKeyResponse.ProtoReflect.Descriptor instead.
func (*PublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{9}
}

func (x *PublicKeyResponse) GetPublicKey() *pb.PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type RefreshResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshResponse) Reset() {
	*x = RefreshResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshResponse) ProtoMessage() {}

func (x *RefreshResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshResponse.ProtoReflect.Descriptor instead.
func (*RefreshResponse) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{10}
}

type StateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StateRequest) Reset() {
	*x = StateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateRequest) ProtoMessage() {}

func (x *StateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateRequest.ProtoReflect.Descriptor instead.
func (*StateRequest) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{11}
}

func (x *StateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DkgState string `protobuf:"bytes,1,opt,name=dkg_state,json=dkgState,proto3" json:"dkg_state,omitempty"`
	PssState string `protobuf:"bytes,2,opt,name=pss_state,json=pssState,proto3" json:"pss_state,omitempty"`
}

func (x *StateResponse) Reset() {
	*x = StateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateResponse) ProtoMessage() {}

func (x *StateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateResponse.ProtoReflect.Descriptor instead.
func (*StateResponse) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{12}
}

func (x *StateResponse) GetDkgState() string {
	if x != nil {
		return x.DkgState
	}
	return ""
}

func (x *StateResponse) GetPssState() string {
	if x != nil {
		return x.PssState
	}
	return ""
}

type ListSecretsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RingId string `protobuf:"bytes,1,opt,name=ring_id,json=ringId,proto3" json:"ring_id,omitempty"`
}

func (x *ListSecretsRequest) Reset() {
	*x = ListSecretsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSecretsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecretsRequest) ProtoMessage() {}

func (x *ListSecretsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecretsRequest.ProtoReflect.Descriptor instead.
func (*ListSecretsRequest) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{13}
}

func (x *ListSecretsRequest) GetRingId() string {
	if x != nil {
		return x.RingId
	}
	return ""
}

type ListSecretsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secrets []*Secret `protobuf:"bytes,1,rep,name=secrets,proto3" json:"secrets,omitempty"`
}

func (x *ListSecretsResponse) Reset() {
	*x = ListSecretsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSecretsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecretsResponse) ProtoMessage() {}

func (x *ListSecretsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecretsResponse.ProtoReflect.Descriptor instead.
func (*ListSecretsResponse) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{14}
}

func (x *ListSecretsResponse) GetSecrets() []*Secret {
	if x != nil {
		return x.Secrets
	}
	return nil
}

type StoreSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RingId string  `protobuf:"bytes,1,opt,name=ring_id,json=ringId,proto3" json:"ring_id,omitempty"`
	Secret *Secret `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *StoreSecretRequest) Reset() {
	*x = StoreSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreSecretRequest) ProtoMessage() {}

func (x *StoreSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreSecretRequest.ProtoReflect.Descriptor instead.
func (*StoreSecretRequest) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{15}
}

func (x *StoreSecretRequest) GetRingId() string {
	if x != nil {
		return x.RingId
	}
	return ""
}

func (x *StoreSecretRequest) GetSecret() *Secret {
	if x != nil {
		return x.Secret
	}
	return nil
}

type StoreSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretId string `protobuf:"bytes,1,opt,name=secret_id,json=secretId,proto3" json:"secret_id,omitempty"`
	RingId   string `protobuf:"bytes,2,opt,name=ring_id,json=ringId,proto3" json:"ring_id,omitempty"`
}

func (x *StoreSecretResponse) Reset() {
	*x = StoreSecretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreSecretResponse) ProtoMessage() {}

func (x *StoreSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreSecretResponse.ProtoReflect.Descriptor instead.
func (*StoreSecretResponse) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{16}
}

func (x *StoreSecretResponse) GetSecretId() string {
	if x != nil {
		return x.SecretId
	}
	return ""
}

func (x *StoreSecretResponse) GetRingId() string {
	if x != nil {
		return x.RingId
	}
	return ""
}

type GetSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretId string `protobuf:"bytes,1,opt,name=secret_id,json=secretId,proto3" json:"secret_id,omitempty"`
	RingId   string `protobuf:"bytes,2,opt,name=ring_id,json=ringId,proto3" json:"ring_id,omitempty"`
}

func (x *GetSecretRequest) Reset() {
	*x = GetSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecretRequest) ProtoMessage() {}

func (x *GetSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecretRequest.ProtoReflect.Descriptor instead.
func (*GetSecretRequest) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{17}
}

func (x *GetSecretRequest) GetSecretId() string {
	if x != nil {
		return x.SecretId
	}
	return ""
}

func (x *GetSecretRequest) GetRingId() string {
	if x != nil {
		return x.RingId
	}
	return ""
}

type GetSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secret *Secret `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *GetSecretResponse) Reset() {
	*x = GetSecretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecretResponse) ProtoMessage() {}

func (x *GetSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecretResponse.ProtoReflect.Descriptor instead.
func (*GetSecretResponse) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{18}
}

func (x *GetSecretResponse) GetSecret() *Secret {
	if x != nil {
		return x.Secret
	}
	return nil
}

type DeleteSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RingId   string `protobuf:"bytes,1,opt,name=ring_id,json=ringId,proto3" json:"ring_id,omitempty"`
	SecretId string `protobuf:"bytes,2,opt,name=secret_id,json=secretId,proto3" json:"secret_id,omitempty"`
	AcpProof []byte `protobuf:"bytes,3,opt,name=acp_proof,json=acpProof,proto3" json:"acp_proof,omitempty"`
}

func (x *DeleteSecretRequest) Reset() {
	*x = DeleteSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSecretRequest) ProtoMessage() {}

func (x *DeleteSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSecretRequest.ProtoReflect.Descriptor instead.
func (*DeleteSecretRequest) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteSecretRequest) GetRingId() string {
	if x != nil {
		return x.RingId
	}
	return ""
}

func (x *DeleteSecretRequest) GetSecretId() string {
	if x != nil {
		return x.SecretId
	}
	return ""
}

func (x *DeleteSecretRequest) GetAcpProof() []byte {
	if x != nil {
		return x.AcpProof
	}
	return nil
}

type ReencryptSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RingId   string `protobuf:"bytes,1,opt,name=ring_id,json=ringId,proto3" json:"ring_id,omitempty"`
	SecretId string `protobuf:"bytes,2,opt,name=secret_id,json=secretId,proto3" json:"secret_id,omitempty"`
	RdrPk    string `protobuf:"bytes,3,opt,name=rdr_pk,json=rdrPk,proto3" json:"rdr_pk,omitempty"`
	AcpProof []byte `protobuf:"bytes,4,opt,name=acp_proof,json=acpProof,proto3" json:"acp_proof,omitempty"`
}

func (x *ReencryptSecretRequest) Reset() {
	*x = ReencryptSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReencryptSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReencryptSecretRequest) ProtoMessage() {}

func (x *ReencryptSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReencryptSecretRequest.ProtoReflect.Descriptor instead.
func (*ReencryptSecretRequest) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{20}
}

func (x *ReencryptSecretRequest) GetRingId() string {
	if x != nil {
		return x.RingId
	}
	return ""
}

func (x *ReencryptSecretRequest) GetSecretId() string {
	if x != nil {
		return x.SecretId
	}
	return ""
}

func (x *ReencryptSecretRequest) GetRdrPk() string {
	if x != nil {
		return x.RdrPk
	}
	return ""
}

func (x *ReencryptSecretRequest) GetAcpProof() []byte {
	if x != nil {
		return x.AcpProof
	}
	return nil
}

type ReencryptSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XncCmt  []byte `protobuf:"bytes,1,opt,name=xnc_cmt,json=xncCmt,proto3" json:"xnc_cmt,omitempty"`    // reencryption commitment
	EncScrt []byte `protobuf:"bytes,2,opt,name=enc_scrt,json=encScrt,proto3" json:"enc_scrt,omitempty"` // enncrypted secret
}

func (x *ReencryptSecretResponse) Reset() {
	*x = ReencryptSecretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReencryptSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReencryptSecretResponse) ProtoMessage() {}

func (x *ReencryptSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReencryptSecretResponse.ProtoReflect.Descriptor instead.
func (*ReencryptSecretResponse) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{21}
}

func (x *ReencryptSecretResponse) GetXncCmt() []byte {
	if x != nil {
		return x.XncCmt
	}
	return nil
}

func (x *ReencryptSecretResponse) GetEncScrt() []byte {
	if x != nil {
		return x.EncScrt
	}
	return nil
}

type Secret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncCmt  []byte `protobuf:"bytes,1,opt,name=enc_cmt,json=encCmt,proto3" json:"enc_cmt,omitempty"`    // encryption commitment
	EncScrt []byte `protobuf:"bytes,2,opt,name=enc_scrt,json=encScrt,proto3" json:"enc_scrt,omitempty"` // enncrypted secret
}

func (x *Secret) Reset() {
	*x = Secret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{22}
}

func (x *Secret) GetEncCmt() []byte {
	if x != nil {
		return x.EncCmt
	}
	return nil
}

func (x *Secret) GetEncScrt() []byte {
	if x != nil {
		return x.EncScrt
	}
	return nil
}

type Ring struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	N             int32   `protobuf:"varint,2,opt,name=n,proto3" json:"n,omitempty"`
	T             int32   `protobuf:"varint,3,opt,name=t,proto3" json:"t,omitempty"`
	Dkg           string  `protobuf:"bytes,5,opt,name=dkg,proto3" json:"dkg,omitempty"`
	Pss           string  `protobuf:"bytes,6,opt,name=pss,proto3" json:"pss,omitempty"`
	Pre           string  `protobuf:"bytes,7,opt,name=pre,proto3" json:"pre,omitempty"`
	Bulletin      string  `protobuf:"bytes,8,opt,name=bulletin,proto3" json:"bulletin,omitempty"`
	Transport     string  `protobuf:"bytes,9,opt,name=transport,proto3" json:"transport,omitempty"`
	Nodes         []*Node `protobuf:"bytes,10,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Authorization string  `protobuf:"bytes,11,opt,name=authorization,proto3" json:"authorization,omitempty"`
}

func (x *Ring) Reset() {
	*x = Ring{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ring) ProtoMessage() {}

func (x *Ring) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ring.ProtoReflect.Descriptor instead.
func (*Ring) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{23}
}

func (x *Ring) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ring) GetN() int32 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *Ring) GetT() int32 {
	if x != nil {
		return x.T
	}
	return 0
}

func (x *Ring) GetDkg() string {
	if x != nil {
		return x.Dkg
	}
	return ""
}

func (x *Ring) GetPss() string {
	if x != nil {
		return x.Pss
	}
	return ""
}

func (x *Ring) GetPre() string {
	if x != nil {
		return x.Pre
	}
	return ""
}

func (x *Ring) GetBulletin() string {
	if x != nil {
		return x.Bulletin
	}
	return ""
}

func (x *Ring) GetTransport() string {
	if x != nil {
		return x.Transport
	}
	return ""
}

func (x *Ring) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Ring) GetAuthorization() string {
	if x != nil {
		return x.Authorization
	}
	return ""
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address   string        `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"` // multiaddress
	PublicKey *pb.PublicKey `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_ring_v1alpha1_ring_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP(), []int{24}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Node) GetPublicKey() *pb.PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

var File_orbis_ring_v1alpha1_ring_proto protoreflect.FileDescriptor

var file_orbis_ring_v1alpha1_ring_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x13, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1d, 0x6c, 0x69, 0x62, 0x70, 0x32, 0x70, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x12, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x72, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x69,
	0x6e, 0x67, 0x52, 0x05, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x42, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x04, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f,
	0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x52, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x24, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x69, 0x6e,
	0x67, 0x52, 0x04, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x0e,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22,
	0x0a, 0x10, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x4f, 0x0a, 0x11, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69,
	0x62, 0x70, 0x32, 0x70, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6b, 0x67, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6b, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x2d, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x22, 0x4c, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73,
	0x2e, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x22, 0x62,
	0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x33, 0x0a,
	0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x22, 0x4b, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22,
	0x48, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x06, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x22, 0x68, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x61, 0x63, 0x70, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x82, 0x01,
	0x0a, 0x16, 0x52, 0x65, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x72, 0x64, 0x72, 0x5f, 0x70, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x64, 0x72, 0x50, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x70, 0x5f, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x61, 0x63, 0x70, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x22, 0x4d, 0x0a, 0x17, 0x52, 0x65, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x78, 0x6e, 0x63, 0x5f, 0x63, 0x6d, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x78, 0x6e, 0x63, 0x43, 0x6d, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x63, 0x5f, 0x73, 0x63,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x6e, 0x63, 0x53, 0x63, 0x72,
	0x74, 0x22, 0x3c, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x65,
	0x6e, 0x63, 0x5f, 0x63, 0x6d, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x6e,
	0x63, 0x43, 0x6d, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x63, 0x5f, 0x73, 0x63, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x6e, 0x63, 0x53, 0x63, 0x72, 0x74, 0x22,
	0xf9, 0x01, 0x0a, 0x04, 0x52, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x01, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x01, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6b, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x64, 0x6b, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x73, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x72, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75,
	0x6c, 0x6c, 0x65, 0x74, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75,
	0x6c, 0x6c, 0x65, 0x74, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6c, 0x0a, 0x04, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3a, 0x0a,
	0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x62, 0x70, 0x32, 0x70, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x32, 0xf6, 0x07, 0x0a, 0x0b, 0x52, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x09, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x25, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x52, 0x69,
	0x6e, 0x67, 0x12, 0x23, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x2e,
	0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x69, 0x6e, 0x67, 0x12, 0x26,
	0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x5c, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x25, 0x2e,
	0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56,
	0x0a, 0x07, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x23, 0x2e, 0x6f, 0x72, 0x62, 0x69,
	0x73, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x21, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0b,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x27, 0x2e, 0x6f, 0x72,
	0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x25, 0x2e,
	0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x28,
	0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x42, 0xe0, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73,
	0x2e, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x09,
	0x52, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4c, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2d, 0x67, 0x6f, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2f, 0x72,
	0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x72, 0x69, 0x6e,
	0x67, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x4f, 0x52, 0x58, 0xaa,
	0x02, 0x13, 0x4f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x52, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x13, 0x4f, 0x72, 0x62, 0x69, 0x73, 0x5c, 0x52, 0x69,
	0x6e, 0x67, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x1f, 0x4f, 0x72,
	0x62, 0x69, 0x73, 0x5c, 0x52, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15,
	0x4f, 0x72, 0x62, 0x69, 0x73, 0x3a, 0x3a, 0x52, 0x69, 0x6e, 0x67, 0x3a, 0x3a, 0x56, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_orbis_ring_v1alpha1_ring_proto_rawDescOnce sync.Once
	file_orbis_ring_v1alpha1_ring_proto_rawDescData = file_orbis_ring_v1alpha1_ring_proto_rawDesc
)

func file_orbis_ring_v1alpha1_ring_proto_rawDescGZIP() []byte {
	file_orbis_ring_v1alpha1_ring_proto_rawDescOnce.Do(func() {
		file_orbis_ring_v1alpha1_ring_proto_rawDescData = protoimpl.X.CompressGZIP(file_orbis_ring_v1alpha1_ring_proto_rawDescData)
	})
	return file_orbis_ring_v1alpha1_ring_proto_rawDescData
}

var file_orbis_ring_v1alpha1_ring_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_orbis_ring_v1alpha1_ring_proto_goTypes = []interface{}{
	(*ListRingsRequest)(nil),        // 0: orbis.ring.v1alpha1.ListRingsRequest
	(*ListRingsResponse)(nil),       // 1: orbis.ring.v1alpha1.ListRingsResponse
	(*CreateRingRequest)(nil),       // 2: orbis.ring.v1alpha1.CreateRingRequest
	(*CreateRingResponse)(nil),      // 3: orbis.ring.v1alpha1.CreateRingResponse
	(*GetRingRequest)(nil),          // 4: orbis.ring.v1alpha1.GetRingRequest
	(*GetRingResponse)(nil),         // 5: orbis.ring.v1alpha1.GetRingResponse
	(*DeleteRingRequest)(nil),       // 6: orbis.ring.v1alpha1.DeleteRingRequest
	(*RefreshRequest)(nil),          // 7: orbis.ring.v1alpha1.RefreshRequest
	(*PublicKeyRequest)(nil),        // 8: orbis.ring.v1alpha1.PublicKeyRequest
	(*PublicKeyResponse)(nil),       // 9: orbis.ring.v1alpha1.PublicKeyResponse
	(*RefreshResponse)(nil),         // 10: orbis.ring.v1alpha1.RefreshResponse
	(*StateRequest)(nil),            // 11: orbis.ring.v1alpha1.StateRequest
	(*StateResponse)(nil),           // 12: orbis.ring.v1alpha1.StateResponse
	(*ListSecretsRequest)(nil),      // 13: orbis.ring.v1alpha1.ListSecretsRequest
	(*ListSecretsResponse)(nil),     // 14: orbis.ring.v1alpha1.ListSecretsResponse
	(*StoreSecretRequest)(nil),      // 15: orbis.ring.v1alpha1.StoreSecretRequest
	(*StoreSecretResponse)(nil),     // 16: orbis.ring.v1alpha1.StoreSecretResponse
	(*GetSecretRequest)(nil),        // 17: orbis.ring.v1alpha1.GetSecretRequest
	(*GetSecretResponse)(nil),       // 18: orbis.ring.v1alpha1.GetSecretResponse
	(*DeleteSecretRequest)(nil),     // 19: orbis.ring.v1alpha1.DeleteSecretRequest
	(*ReencryptSecretRequest)(nil),  // 20: orbis.ring.v1alpha1.ReencryptSecretRequest
	(*ReencryptSecretResponse)(nil), // 21: orbis.ring.v1alpha1.ReencryptSecretResponse
	(*Secret)(nil),                  // 22: orbis.ring.v1alpha1.Secret
	(*Ring)(nil),                    // 23: orbis.ring.v1alpha1.Ring
	(*Node)(nil),                    // 24: orbis.ring.v1alpha1.Node
	(*pb.PublicKey)(nil),            // 25: libp2p.crypto.v1.PublicKey
	(*emptypb.Empty)(nil),           // 26: google.protobuf.Empty
}
var file_orbis_ring_v1alpha1_ring_proto_depIdxs = []int32{
	23, // 0: orbis.ring.v1alpha1.ListRingsResponse.rings:type_name -> orbis.ring.v1alpha1.Ring
	23, // 1: orbis.ring.v1alpha1.CreateRingRequest.ring:type_name -> orbis.ring.v1alpha1.Ring
	23, // 2: orbis.ring.v1alpha1.GetRingResponse.ring:type_name -> orbis.ring.v1alpha1.Ring
	25, // 3: orbis.ring.v1alpha1.PublicKeyResponse.public_key:type_name -> libp2p.crypto.v1.PublicKey
	22, // 4: orbis.ring.v1alpha1.ListSecretsResponse.secrets:type_name -> orbis.ring.v1alpha1.Secret
	22, // 5: orbis.ring.v1alpha1.StoreSecretRequest.secret:type_name -> orbis.ring.v1alpha1.Secret
	22, // 6: orbis.ring.v1alpha1.GetSecretResponse.secret:type_name -> orbis.ring.v1alpha1.Secret
	24, // 7: orbis.ring.v1alpha1.Ring.nodes:type_name -> orbis.ring.v1alpha1.Node
	25, // 8: orbis.ring.v1alpha1.Node.public_key:type_name -> libp2p.crypto.v1.PublicKey
	0,  // 9: orbis.ring.v1alpha1.RingService.ListRings:input_type -> orbis.ring.v1alpha1.ListRingsRequest
	4,  // 10: orbis.ring.v1alpha1.RingService.GetRing:input_type -> orbis.ring.v1alpha1.GetRingRequest
	2,  // 11: orbis.ring.v1alpha1.RingService.CreateRing:input_type -> orbis.ring.v1alpha1.CreateRingRequest
	6,  // 12: orbis.ring.v1alpha1.RingService.DeleteRing:input_type -> orbis.ring.v1alpha1.DeleteRingRequest
	8,  // 13: orbis.ring.v1alpha1.RingService.PublicKey:input_type -> orbis.ring.v1alpha1.PublicKeyRequest
	7,  // 14: orbis.ring.v1alpha1.RingService.Refresh:input_type -> orbis.ring.v1alpha1.RefreshRequest
	11, // 15: orbis.ring.v1alpha1.RingService.State:input_type -> orbis.ring.v1alpha1.StateRequest
	13, // 16: orbis.ring.v1alpha1.RingService.ListSecrets:input_type -> orbis.ring.v1alpha1.ListSecretsRequest
	15, // 17: orbis.ring.v1alpha1.RingService.StoreSecret:input_type -> orbis.ring.v1alpha1.StoreSecretRequest
	17, // 18: orbis.ring.v1alpha1.RingService.GetSecret:input_type -> orbis.ring.v1alpha1.GetSecretRequest
	19, // 19: orbis.ring.v1alpha1.RingService.DeleteSecret:input_type -> orbis.ring.v1alpha1.DeleteSecretRequest
	1,  // 20: orbis.ring.v1alpha1.RingService.ListRings:output_type -> orbis.ring.v1alpha1.ListRingsResponse
	5,  // 21: orbis.ring.v1alpha1.RingService.GetRing:output_type -> orbis.ring.v1alpha1.GetRingResponse
	3,  // 22: orbis.ring.v1alpha1.RingService.CreateRing:output_type -> orbis.ring.v1alpha1.CreateRingResponse
	26, // 23: orbis.ring.v1alpha1.RingService.DeleteRing:output_type -> google.protobuf.Empty
	9,  // 24: orbis.ring.v1alpha1.RingService.PublicKey:output_type -> orbis.ring.v1alpha1.PublicKeyResponse
	10, // 25: orbis.ring.v1alpha1.RingService.Refresh:output_type -> orbis.ring.v1alpha1.RefreshResponse
	12, // 26: orbis.ring.v1alpha1.RingService.State:output_type -> orbis.ring.v1alpha1.StateResponse
	14, // 27: orbis.ring.v1alpha1.RingService.ListSecrets:output_type -> orbis.ring.v1alpha1.ListSecretsResponse
	16, // 28: orbis.ring.v1alpha1.RingService.StoreSecret:output_type -> orbis.ring.v1alpha1.StoreSecretResponse
	18, // 29: orbis.ring.v1alpha1.RingService.GetSecret:output_type -> orbis.ring.v1alpha1.GetSecretResponse
	26, // 30: orbis.ring.v1alpha1.RingService.DeleteSecret:output_type -> google.protobuf.Empty
	20, // [20:31] is the sub-list for method output_type
	9,  // [9:20] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_orbis_ring_v1alpha1_ring_proto_init() }
func file_orbis_ring_v1alpha1_ring_proto_init() {
	if File_orbis_ring_v1alpha1_ring_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSecretsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSecretsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreSecretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReencryptSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReencryptSecretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Secret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ring); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_ring_v1alpha1_ring_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orbis_ring_v1alpha1_ring_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orbis_ring_v1alpha1_ring_proto_goTypes,
		DependencyIndexes: file_orbis_ring_v1alpha1_ring_proto_depIdxs,
		MessageInfos:      file_orbis_ring_v1alpha1_ring_proto_msgTypes,
	}.Build()
	File_orbis_ring_v1alpha1_ring_proto = out.File
	file_orbis_ring_v1alpha1_ring_proto_rawDesc = nil
	file_orbis_ring_v1alpha1_ring_proto_goTypes = nil
	file_orbis_ring_v1alpha1_ring_proto_depIdxs = nil
}
