// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: orbis/utility/v1alpha1/utility.proto

package utilityv1alpha1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RegistrationResult encodes the possible result set from Registering an Object
type RegistrationResult int32

const (
	// NoOp indicates no action was take. The operation failed or the Object already existed and was active
	RegistrationResult_NoOp RegistrationResult = 0
	// Registered indicates the Object was sucessfuly registered to the Actor.
	RegistrationResult_Registered RegistrationResult = 1
	// Unarchived indicates that a previously deleted Object is active again.
	// Only the original owners can Unarchive an object.
	RegistrationResult_Unarchived RegistrationResult = 2
)

// Enum value maps for RegistrationResult.
var (
	RegistrationResult_name = map[int32]string{
		0: "NoOp",
		1: "Registered",
		2: "Unarchived",
	}
	RegistrationResult_value = map[string]int32{
		"NoOp":       0,
		"Registered": 1,
		"Unarchived": 2,
	}
)

func (x RegistrationResult) Enum() *RegistrationResult {
	p := new(RegistrationResult)
	*p = x
	return p
}

func (x RegistrationResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegistrationResult) Descriptor() protoreflect.EnumDescriptor {
	return file_orbis_utility_v1alpha1_utility_proto_enumTypes[0].Descriptor()
}

func (RegistrationResult) Type() protoreflect.EnumType {
	return &file_orbis_utility_v1alpha1_utility_proto_enumTypes[0]
}

func (x RegistrationResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegistrationResult.Descriptor instead.
func (RegistrationResult) EnumDescriptor() ([]byte, []int) {
	return file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP(), []int{0}
}

type ACPCreatePolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PolicyYaml string `protobuf:"bytes,2,opt,name=policy_yaml,json=policyYaml,proto3" json:"policy_yaml,omitempty"`
}

func (x *ACPCreatePolicyRequest) Reset() {
	*x = ACPCreatePolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACPCreatePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACPCreatePolicyRequest) ProtoMessage() {}

func (x *ACPCreatePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACPCreatePolicyRequest.ProtoReflect.Descriptor instead.
func (*ACPCreatePolicyRequest) Descriptor() ([]byte, []int) {
	return file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP(), []int{0}
}

func (x *ACPCreatePolicyRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *ACPCreatePolicyRequest) GetPolicyYaml() string {
	if x != nil {
		return x.PolicyYaml
	}
	return ""
}

type ACPCreatePolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyId string `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
}

func (x *ACPCreatePolicyResponse) Reset() {
	*x = ACPCreatePolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACPCreatePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACPCreatePolicyResponse) ProtoMessage() {}

func (x *ACPCreatePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACPCreatePolicyResponse.ProtoReflect.Descriptor instead.
func (*ACPCreatePolicyResponse) Descriptor() ([]byte, []int) {
	return file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP(), []int{1}
}

func (x *ACPCreatePolicyResponse) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

type ACPRegisterObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyId       string `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	Creator        string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	ObjectResource string `protobuf:"bytes,3,opt,name=object_resource,json=objectResource,proto3" json:"object_resource,omitempty"`
	ObjectId       string `protobuf:"bytes,4,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *ACPRegisterObjectRequest) Reset() {
	*x = ACPRegisterObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACPRegisterObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACPRegisterObjectRequest) ProtoMessage() {}

func (x *ACPRegisterObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACPRegisterObjectRequest.ProtoReflect.Descriptor instead.
func (*ACPRegisterObjectRequest) Descriptor() ([]byte, []int) {
	return file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP(), []int{2}
}

func (x *ACPRegisterObjectRequest) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *ACPRegisterObjectRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *ACPRegisterObjectRequest) GetObjectResource() string {
	if x != nil {
		return x.ObjectResource
	}
	return ""
}

func (x *ACPRegisterObjectRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type ACPRegisterObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result RegistrationResult `protobuf:"varint,1,opt,name=result,proto3,enum=orbis.utility.v1alpha1.RegistrationResult" json:"result,omitempty"`
}

func (x *ACPRegisterObjectResponse) Reset() {
	*x = ACPRegisterObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACPRegisterObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACPRegisterObjectResponse) ProtoMessage() {}

func (x *ACPRegisterObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACPRegisterObjectResponse.ProtoReflect.Descriptor instead.
func (*ACPRegisterObjectResponse) Descriptor() ([]byte, []int) {
	return file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP(), []int{3}
}

func (x *ACPRegisterObjectResponse) GetResult() RegistrationResult {
	if x != nil {
		return x.Result
	}
	return RegistrationResult_NoOp
}

type ACPSetRelationshipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor          string `protobuf:"bytes,1,opt,name=actor,proto3" json:"actor,omitempty"`
	PolicyId       string `protobuf:"bytes,2,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	ObjectResource string `protobuf:"bytes,3,opt,name=object_resource,json=objectResource,proto3" json:"object_resource,omitempty"`
	ObjectId       string `protobuf:"bytes,4,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Relation       string `protobuf:"bytes,6,opt,name=relation,proto3" json:"relation,omitempty"`
	Creator        string `protobuf:"bytes,7,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *ACPSetRelationshipRequest) Reset() {
	*x = ACPSetRelationshipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACPSetRelationshipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACPSetRelationshipRequest) ProtoMessage() {}

func (x *ACPSetRelationshipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACPSetRelationshipRequest.ProtoReflect.Descriptor instead.
func (*ACPSetRelationshipRequest) Descriptor() ([]byte, []int) {
	return file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP(), []int{4}
}

func (x *ACPSetRelationshipRequest) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *ACPSetRelationshipRequest) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *ACPSetRelationshipRequest) GetObjectResource() string {
	if x != nil {
		return x.ObjectResource
	}
	return ""
}

func (x *ACPSetRelationshipRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *ACPSetRelationshipRequest) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *ACPSetRelationshipRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

type ACPSetRelationshipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result RegistrationResult `protobuf:"varint,1,opt,name=result,proto3,enum=orbis.utility.v1alpha1.RegistrationResult" json:"result,omitempty"`
}

func (x *ACPSetRelationshipResponse) Reset() {
	*x = ACPSetRelationshipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACPSetRelationshipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACPSetRelationshipResponse) ProtoMessage() {}

func (x *ACPSetRelationshipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACPSetRelationshipResponse.ProtoReflect.Descriptor instead.
func (*ACPSetRelationshipResponse) Descriptor() ([]byte, []int) {
	return file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP(), []int{5}
}

func (x *ACPSetRelationshipResponse) GetResult() RegistrationResult {
	if x != nil {
		return x.Result
	}
	return RegistrationResult_NoOp
}

type CreateBech32AddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey []byte `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Prefix    string `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *CreateBech32AddressRequest) Reset() {
	*x = CreateBech32AddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBech32AddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBech32AddressRequest) ProtoMessage() {}

func (x *CreateBech32AddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBech32AddressRequest.ProtoReflect.Descriptor instead.
func (*CreateBech32AddressRequest) Descriptor() ([]byte, []int) {
	return file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP(), []int{6}
}

func (x *CreateBech32AddressRequest) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *CreateBech32AddressRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

type CreateBech32AddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bech32Address string `protobuf:"bytes,1,opt,name=bech32address,proto3" json:"bech32address,omitempty"`
}

func (x *CreateBech32AddressResponse) Reset() {
	*x = CreateBech32AddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBech32AddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBech32AddressResponse) ProtoMessage() {}

func (x *CreateBech32AddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBech32AddressResponse.ProtoReflect.Descriptor instead.
func (*CreateBech32AddressResponse) Descriptor() ([]byte, []int) {
	return file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP(), []int{7}
}

func (x *CreateBech32AddressResponse) GetBech32Address() string {
	if x != nil {
		return x.Bech32Address
	}
	return ""
}

type CreateDIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyType   string `protobuf:"bytes,1,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	PublicKey []byte `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *CreateDIDRequest) Reset() {
	*x = CreateDIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDIDRequest) ProtoMessage() {}

func (x *CreateDIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDIDRequest.ProtoReflect.Descriptor instead.
func (*CreateDIDRequest) Descriptor() ([]byte, []int) {
	return file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP(), []int{8}
}

func (x *CreateDIDRequest) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *CreateDIDRequest) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type CreateDIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did        string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	Scheme     string `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty"`
	Method     string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	Identifier string `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *CreateDIDResponse) Reset() {
	*x = CreateDIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDIDResponse) ProtoMessage() {}

func (x *CreateDIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDIDResponse.ProtoReflect.Descriptor instead.
func (*CreateDIDResponse) Descriptor() ([]byte, []int) {
	return file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP(), []int{9}
}

func (x *CreateDIDResponse) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *CreateDIDResponse) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *CreateDIDResponse) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *CreateDIDResponse) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type CreateJWTRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kid        string `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
	Claims     string `protobuf:"bytes,2,opt,name=claims,proto3" json:"claims,omitempty"`
	KeyType    string `protobuf:"bytes,3,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	PrivateKey []byte `protobuf:"bytes,4,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
}

func (x *CreateJWTRequest) Reset() {
	*x = CreateJWTRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJWTRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJWTRequest) ProtoMessage() {}

func (x *CreateJWTRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJWTRequest.ProtoReflect.Descriptor instead.
func (*CreateJWTRequest) Descriptor() ([]byte, []int) {
	return file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP(), []int{10}
}

func (x *CreateJWTRequest) GetKid() string {
	if x != nil {
		return x.Kid
	}
	return ""
}

func (x *CreateJWTRequest) GetClaims() string {
	if x != nil {
		return x.Claims
	}
	return ""
}

func (x *CreateJWTRequest) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *CreateJWTRequest) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

type CreateJWTResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jwt string `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
}

func (x *CreateJWTResponse) Reset() {
	*x = CreateJWTResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJWTResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJWTResponse) ProtoMessage() {}

func (x *CreateJWTResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJWTResponse.ProtoReflect.Descriptor instead.
func (*CreateJWTResponse) Descriptor() ([]byte, []int) {
	return file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP(), []int{11}
}

func (x *CreateJWTResponse) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

type CreateKeypairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyType    string `protobuf:"bytes,1,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	RandReader string `protobuf:"bytes,2,opt,name=rand_reader,json=randReader,proto3" json:"rand_reader,omitempty"`
}

func (x *CreateKeypairRequest) Reset() {
	*x = CreateKeypairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKeypairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKeypairRequest) ProtoMessage() {}

func (x *CreateKeypairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKeypairRequest.ProtoReflect.Descriptor instead.
func (*CreateKeypairRequest) Descriptor() ([]byte, []int) {
	return file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP(), []int{12}
}

func (x *CreateKeypairRequest) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *CreateKeypairRequest) GetRandReader() string {
	if x != nil {
		return x.RandReader
	}
	return ""
}

type CreateKeypairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrivateKey []byte `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	PublicKey  []byte `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *CreateKeypairResponse) Reset() {
	*x = CreateKeypairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKeypairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKeypairResponse) ProtoMessage() {}

func (x *CreateKeypairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKeypairResponse.ProtoReflect.Descriptor instead.
func (*CreateKeypairResponse) Descriptor() ([]byte, []int) {
	return file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP(), []int{13}
}

func (x *CreateKeypairResponse) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *CreateKeypairResponse) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type EncryptSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyType string `protobuf:"bytes,1,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	DkgPk   []byte `protobuf:"bytes,2,opt,name=dkg_pk,json=dkgPk,proto3" json:"dkg_pk,omitempty"`
	Scrt    []byte `protobuf:"bytes,3,opt,name=scrt,proto3" json:"scrt,omitempty"`
}

func (x *EncryptSecretRequest) Reset() {
	*x = EncryptSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptSecretRequest) ProtoMessage() {}

func (x *EncryptSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptSecretRequest.ProtoReflect.Descriptor instead.
func (*EncryptSecretRequest) Descriptor() ([]byte, []int) {
	return file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP(), []int{14}
}

func (x *EncryptSecretRequest) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *EncryptSecretRequest) GetDkgPk() []byte {
	if x != nil {
		return x.DkgPk
	}
	return nil
}

func (x *EncryptSecretRequest) GetScrt() []byte {
	if x != nil {
		return x.Scrt
	}
	return nil
}

type EncryptSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncCmt  []byte   `protobuf:"bytes,1,opt,name=enc_cmt,json=encCmt,proto3" json:"enc_cmt,omitempty"`
	EncScrt [][]byte `protobuf:"bytes,2,rep,name=enc_scrt,json=encScrt,proto3" json:"enc_scrt,omitempty"`
}

func (x *EncryptSecretResponse) Reset() {
	*x = EncryptSecretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptSecretResponse) ProtoMessage() {}

func (x *EncryptSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptSecretResponse.ProtoReflect.Descriptor instead.
func (*EncryptSecretResponse) Descriptor() ([]byte, []int) {
	return file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP(), []int{15}
}

func (x *EncryptSecretResponse) GetEncCmt() []byte {
	if x != nil {
		return x.EncCmt
	}
	return nil
}

func (x *EncryptSecretResponse) GetEncScrt() [][]byte {
	if x != nil {
		return x.EncScrt
	}
	return nil
}

type DecryptSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyType string   `protobuf:"bytes,1,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	EncScrt [][]byte `protobuf:"bytes,2,rep,name=enc_scrt,json=encScrt,proto3" json:"enc_scrt,omitempty"`
	XncCmt  []byte   `protobuf:"bytes,3,opt,name=xnc_cmt,json=xncCmt,proto3" json:"xnc_cmt,omitempty"`
	RdrSk   []byte   `protobuf:"bytes,4,opt,name=rdr_sk,json=rdrSk,proto3" json:"rdr_sk,omitempty"`
	DkgPk   []byte   `protobuf:"bytes,5,opt,name=dkg_pk,json=dkgPk,proto3" json:"dkg_pk,omitempty"`
}

func (x *DecryptSecretRequest) Reset() {
	*x = DecryptSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptSecretRequest) ProtoMessage() {}

func (x *DecryptSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptSecretRequest.ProtoReflect.Descriptor instead.
func (*DecryptSecretRequest) Descriptor() ([]byte, []int) {
	return file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP(), []int{16}
}

func (x *DecryptSecretRequest) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *DecryptSecretRequest) GetEncScrt() [][]byte {
	if x != nil {
		return x.EncScrt
	}
	return nil
}

func (x *DecryptSecretRequest) GetXncCmt() []byte {
	if x != nil {
		return x.XncCmt
	}
	return nil
}

func (x *DecryptSecretRequest) GetRdrSk() []byte {
	if x != nil {
		return x.RdrSk
	}
	return nil
}

func (x *DecryptSecretRequest) GetDkgPk() []byte {
	if x != nil {
		return x.DkgPk
	}
	return nil
}

type DecryptSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scrt []byte `protobuf:"bytes,1,opt,name=scrt,proto3" json:"scrt,omitempty"`
}

func (x *DecryptSecretResponse) Reset() {
	*x = DecryptSecretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptSecretResponse) ProtoMessage() {}

func (x *DecryptSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orbis_utility_v1alpha1_utility_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptSecretResponse.ProtoReflect.Descriptor instead.
func (*DecryptSecretResponse) Descriptor() ([]byte, []int) {
	return file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP(), []int{17}
}

func (x *DecryptSecretResponse) GetScrt() []byte {
	if x != nil {
		return x.Scrt
	}
	return nil
}

var File_orbis_utility_v1alpha1_utility_proto protoreflect.FileDescriptor

var file_orbis_utility_v1alpha1_utility_proto_rawDesc = []byte{
	0x0a, 0x24, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x75, 0x74,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x16,
	0x41, 0x43, 0x50, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x59, 0x61, 0x6d,
	0x6c, 0x22, 0x36, 0x0a, 0x17, 0x41, 0x43, 0x50, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x18, 0x41, 0x43,
	0x50, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x27, 0x0a,
	0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x19, 0x41, 0x43, 0x50, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2a, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xca, 0x01, 0x0a, 0x19, 0x41, 0x43, 0x50, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x22, 0x60, 0x0a, 0x1a, 0x41, 0x43, 0x50, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2a, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x53, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x65, 0x63,
	0x68, 0x33, 0x32, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x43, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x65, 0x63, 0x68, 0x33, 0x32, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x65, 0x63, 0x68, 0x33,
	0x32, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x62, 0x65, 0x63, 0x68, 0x33, 0x32, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4c, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x75, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x22, 0x78, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x57, 0x54, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x25, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x57, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6a, 0x77, 0x74, 0x22, 0x52, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6b,
	0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b,
	0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x72,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x57, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x22, 0x5c, 0x0a, 0x14, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6b, 0x67, 0x5f, 0x70, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x64, 0x6b, 0x67, 0x50, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x63,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x63, 0x72, 0x74, 0x22, 0x4b,
	0x0a, 0x15, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x6e, 0x63, 0x5f, 0x63,
	0x6d, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x6e, 0x63, 0x43, 0x6d, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x63, 0x5f, 0x73, 0x63, 0x72, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x07, 0x65, 0x6e, 0x63, 0x53, 0x63, 0x72, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x14,
	0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x63, 0x5f, 0x73, 0x63, 0x72, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x07, 0x65, 0x6e, 0x63, 0x53, 0x63, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x78, 0x6e,
	0x63, 0x5f, 0x63, 0x6d, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x78, 0x6e, 0x63,
	0x43, 0x6d, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x64, 0x72, 0x5f, 0x73, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x72, 0x64, 0x72, 0x53, 0x6b, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6b,
	0x67, 0x5f, 0x70, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x64, 0x6b, 0x67, 0x50,
	0x6b, 0x22, 0x2b, 0x0a, 0x15, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x63,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x63, 0x72, 0x74, 0x2a, 0x3e,
	0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x4f, 0x70, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0e,
	0x0a, 0x0a, 0x55, 0x6e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x10, 0x02, 0x32, 0x8e,
	0x0b, 0x0a, 0x0e, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x82, 0x01, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x49, 0x44, 0x12,
	0x28, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6f, 0x72, 0x62, 0x69,
	0x73, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22,
	0x15, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x2f, 0x64, 0x69, 0x64, 0x12, 0xa4, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x65, 0x63, 0x68, 0x33, 0x32, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x32,
	0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x65,
	0x63, 0x68, 0x33, 0x32, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x65, 0x63, 0x68, 0x33, 0x32, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a,
	0x01, 0x2a, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x75, 0x74,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x82, 0x01,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x57, 0x54, 0x12, 0x28, 0x2e, 0x6f, 0x72,
	0x62, 0x69, 0x73, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x57, 0x54, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x75, 0x74,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x57, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x6a,
	0x77, 0x74, 0x12, 0x92, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x70, 0x61, 0x69, 0x72, 0x12, 0x2c, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x75, 0x74, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f,
	0x6b, 0x65, 0x79, 0x70, 0x61, 0x69, 0x72, 0x12, 0x99, 0x01, 0x0a, 0x0d, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x2c, 0x2e, 0x6f, 0x72, 0x62, 0x69,
	0x73, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e,
	0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01,
	0x2a, 0x22, 0x20, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x75, 0x74, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x2f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x3a, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x12, 0x99, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x2c, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x75, 0x74,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44,
	0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x75, 0x74, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x3a, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12,
	0xa1, 0x01, 0x0a, 0x0f, 0x41, 0x43, 0x50, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x12, 0x2e, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x75, 0x74, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x43, 0x50,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x75, 0x74, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x43, 0x50,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22,
	0x22, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x2f, 0x61, 0x63, 0x70, 0x3a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x12, 0xa9, 0x01, 0x0a, 0x11, 0x41, 0x43, 0x50, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x30, 0x2e, 0x6f, 0x72, 0x62, 0x69,
	0x73, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x43, 0x50, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6f, 0x72,
	0x62, 0x69, 0x73, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x43, 0x50, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x61, 0x63, 0x70,
	0x3a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0xad, 0x01, 0x0a, 0x12, 0x41, 0x43, 0x50, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x12, 0x31, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x75,
	0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x41, 0x43, 0x50, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68,
	0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6f, 0x72, 0x62, 0x69,
	0x73, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x43, 0x50, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x61, 0x63, 0x70, 0x3a,
	0x73, 0x65, 0x74, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x42,
	0xf8, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2e, 0x75, 0x74,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x0c,
	0x55, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x52,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x2d, 0x67,
	0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x72, 0x62, 0x69,
	0x73, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x3b, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0xa2, 0x02, 0x03, 0x4f, 0x55, 0x58, 0xaa, 0x02, 0x16, 0x4f, 0x72, 0x62, 0x69, 0x73,
	0x2e, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0xca, 0x02, 0x16, 0x4f, 0x72, 0x62, 0x69, 0x73, 0x5c, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x22, 0x4f, 0x72, 0x62,
	0x69, 0x73, 0x5c, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x18, 0x4f, 0x72, 0x62, 0x69, 0x73, 0x3a, 0x3a, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_orbis_utility_v1alpha1_utility_proto_rawDescOnce sync.Once
	file_orbis_utility_v1alpha1_utility_proto_rawDescData = file_orbis_utility_v1alpha1_utility_proto_rawDesc
)

func file_orbis_utility_v1alpha1_utility_proto_rawDescGZIP() []byte {
	file_orbis_utility_v1alpha1_utility_proto_rawDescOnce.Do(func() {
		file_orbis_utility_v1alpha1_utility_proto_rawDescData = protoimpl.X.CompressGZIP(file_orbis_utility_v1alpha1_utility_proto_rawDescData)
	})
	return file_orbis_utility_v1alpha1_utility_proto_rawDescData
}

var file_orbis_utility_v1alpha1_utility_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_orbis_utility_v1alpha1_utility_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_orbis_utility_v1alpha1_utility_proto_goTypes = []interface{}{
	(RegistrationResult)(0),             // 0: orbis.utility.v1alpha1.RegistrationResult
	(*ACPCreatePolicyRequest)(nil),      // 1: orbis.utility.v1alpha1.ACPCreatePolicyRequest
	(*ACPCreatePolicyResponse)(nil),     // 2: orbis.utility.v1alpha1.ACPCreatePolicyResponse
	(*ACPRegisterObjectRequest)(nil),    // 3: orbis.utility.v1alpha1.ACPRegisterObjectRequest
	(*ACPRegisterObjectResponse)(nil),   // 4: orbis.utility.v1alpha1.ACPRegisterObjectResponse
	(*ACPSetRelationshipRequest)(nil),   // 5: orbis.utility.v1alpha1.ACPSetRelationshipRequest
	(*ACPSetRelationshipResponse)(nil),  // 6: orbis.utility.v1alpha1.ACPSetRelationshipResponse
	(*CreateBech32AddressRequest)(nil),  // 7: orbis.utility.v1alpha1.CreateBech32AddressRequest
	(*CreateBech32AddressResponse)(nil), // 8: orbis.utility.v1alpha1.CreateBech32AddressResponse
	(*CreateDIDRequest)(nil),            // 9: orbis.utility.v1alpha1.CreateDIDRequest
	(*CreateDIDResponse)(nil),           // 10: orbis.utility.v1alpha1.CreateDIDResponse
	(*CreateJWTRequest)(nil),            // 11: orbis.utility.v1alpha1.CreateJWTRequest
	(*CreateJWTResponse)(nil),           // 12: orbis.utility.v1alpha1.CreateJWTResponse
	(*CreateKeypairRequest)(nil),        // 13: orbis.utility.v1alpha1.CreateKeypairRequest
	(*CreateKeypairResponse)(nil),       // 14: orbis.utility.v1alpha1.CreateKeypairResponse
	(*EncryptSecretRequest)(nil),        // 15: orbis.utility.v1alpha1.EncryptSecretRequest
	(*EncryptSecretResponse)(nil),       // 16: orbis.utility.v1alpha1.EncryptSecretResponse
	(*DecryptSecretRequest)(nil),        // 17: orbis.utility.v1alpha1.DecryptSecretRequest
	(*DecryptSecretResponse)(nil),       // 18: orbis.utility.v1alpha1.DecryptSecretResponse
}
var file_orbis_utility_v1alpha1_utility_proto_depIdxs = []int32{
	0,  // 0: orbis.utility.v1alpha1.ACPRegisterObjectResponse.result:type_name -> orbis.utility.v1alpha1.RegistrationResult
	0,  // 1: orbis.utility.v1alpha1.ACPSetRelationshipResponse.result:type_name -> orbis.utility.v1alpha1.RegistrationResult
	9,  // 2: orbis.utility.v1alpha1.UtilityService.CreateDID:input_type -> orbis.utility.v1alpha1.CreateDIDRequest
	7,  // 3: orbis.utility.v1alpha1.UtilityService.CreateBech32Address:input_type -> orbis.utility.v1alpha1.CreateBech32AddressRequest
	11, // 4: orbis.utility.v1alpha1.UtilityService.CreateJWT:input_type -> orbis.utility.v1alpha1.CreateJWTRequest
	13, // 5: orbis.utility.v1alpha1.UtilityService.CreateKeypair:input_type -> orbis.utility.v1alpha1.CreateKeypairRequest
	15, // 6: orbis.utility.v1alpha1.UtilityService.EncryptSecret:input_type -> orbis.utility.v1alpha1.EncryptSecretRequest
	17, // 7: orbis.utility.v1alpha1.UtilityService.DecryptSecret:input_type -> orbis.utility.v1alpha1.DecryptSecretRequest
	1,  // 8: orbis.utility.v1alpha1.UtilityService.ACPCreatePolicy:input_type -> orbis.utility.v1alpha1.ACPCreatePolicyRequest
	3,  // 9: orbis.utility.v1alpha1.UtilityService.ACPRegisterObject:input_type -> orbis.utility.v1alpha1.ACPRegisterObjectRequest
	5,  // 10: orbis.utility.v1alpha1.UtilityService.ACPSetRelationship:input_type -> orbis.utility.v1alpha1.ACPSetRelationshipRequest
	10, // 11: orbis.utility.v1alpha1.UtilityService.CreateDID:output_type -> orbis.utility.v1alpha1.CreateDIDResponse
	8,  // 12: orbis.utility.v1alpha1.UtilityService.CreateBech32Address:output_type -> orbis.utility.v1alpha1.CreateBech32AddressResponse
	12, // 13: orbis.utility.v1alpha1.UtilityService.CreateJWT:output_type -> orbis.utility.v1alpha1.CreateJWTResponse
	14, // 14: orbis.utility.v1alpha1.UtilityService.CreateKeypair:output_type -> orbis.utility.v1alpha1.CreateKeypairResponse
	16, // 15: orbis.utility.v1alpha1.UtilityService.EncryptSecret:output_type -> orbis.utility.v1alpha1.EncryptSecretResponse
	18, // 16: orbis.utility.v1alpha1.UtilityService.DecryptSecret:output_type -> orbis.utility.v1alpha1.DecryptSecretResponse
	2,  // 17: orbis.utility.v1alpha1.UtilityService.ACPCreatePolicy:output_type -> orbis.utility.v1alpha1.ACPCreatePolicyResponse
	4,  // 18: orbis.utility.v1alpha1.UtilityService.ACPRegisterObject:output_type -> orbis.utility.v1alpha1.ACPRegisterObjectResponse
	6,  // 19: orbis.utility.v1alpha1.UtilityService.ACPSetRelationship:output_type -> orbis.utility.v1alpha1.ACPSetRelationshipResponse
	11, // [11:20] is the sub-list for method output_type
	2,  // [2:11] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_orbis_utility_v1alpha1_utility_proto_init() }
func file_orbis_utility_v1alpha1_utility_proto_init() {
	if File_orbis_utility_v1alpha1_utility_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_orbis_utility_v1alpha1_utility_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACPCreatePolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_utility_v1alpha1_utility_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACPCreatePolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_utility_v1alpha1_utility_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACPRegisterObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_utility_v1alpha1_utility_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACPRegisterObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_utility_v1alpha1_utility_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACPSetRelationshipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_utility_v1alpha1_utility_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACPSetRelationshipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_utility_v1alpha1_utility_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBech32AddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_utility_v1alpha1_utility_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBech32AddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_utility_v1alpha1_utility_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_utility_v1alpha1_utility_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_utility_v1alpha1_utility_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJWTRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_utility_v1alpha1_utility_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJWTResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_utility_v1alpha1_utility_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKeypairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_utility_v1alpha1_utility_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKeypairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_utility_v1alpha1_utility_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_utility_v1alpha1_utility_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptSecretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_utility_v1alpha1_utility_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orbis_utility_v1alpha1_utility_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptSecretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orbis_utility_v1alpha1_utility_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orbis_utility_v1alpha1_utility_proto_goTypes,
		DependencyIndexes: file_orbis_utility_v1alpha1_utility_proto_depIdxs,
		EnumInfos:         file_orbis_utility_v1alpha1_utility_proto_enumTypes,
		MessageInfos:      file_orbis_utility_v1alpha1_utility_proto_msgTypes,
	}.Build()
	File_orbis_utility_v1alpha1_utility_proto = out.File
	file_orbis_utility_v1alpha1_utility_proto_rawDesc = nil
	file_orbis_utility_v1alpha1_utility_proto_goTypes = nil
	file_orbis_utility_v1alpha1_utility_proto_depIdxs = nil
}
